plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':shared')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'typecheck.Typecheck'
}

run {
    standardInput = System.in
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

tasks.register('uberJar', Jar) {

    archiveClassifier = 'uber'

    manifest {
        attributes 'Main-Class': application.mainClass
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}
