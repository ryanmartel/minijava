func Main()
  t.1 = HeapAllocZ(12)
  [t.1] = :functable_QS
  if t.1 goto :null1
  Error("null pointer")
  null1:
  t.2 = [t.1]
  t.2 = [t.2+0]
  t.3 = call t.2(t.1 10)
  PrintIntS(t.3)
  ret

func QS_Start(this sz)
  if this goto :null2
  Error("null pointer")
  null2:
  t.1 = [this]
  t.1 = [t.1+12]
  t.2 = call t.1(this sz)
  aux01 = t.2
  if this goto :null3
  Error("null pointer")
  null3:
  t.3 = [this]
  t.3 = [t.3+8]
  t.4 = call t.3(this)
  aux01 = t.4
  PrintIntS(9999)
  t.5 = [this+8]
  t.6 = Sub(t.5 1)
  aux01 = t.6
  if this goto :null4
  Error("null pointer")
  null4:
  t.7 = [this]
  t.7 = [t.7+4]
  t.8 = call t.7(this 0 aux01)
  aux01 = t.8
  if this goto :null5
  Error("null pointer")
  null5:
  t.9 = [this]
  t.9 = [t.9+8]
  t.10 = call t.9(this)
  aux01 = t.10
  ret 0

func QS_Sort(this left right)
  t = 0
  t.1 = LtS(left right)
  if0 t.1 goto :if1_else
  t.2 = [this+4]
  if t.2 goto :null6
  Error("null pointer")
  null6:
  t.3 = [t.2]
  t.3 = LtS(right t.3)
  if t.3 goto :bounds1
  Error("array index out of bounds")
  bounds1:
  t.3 = MulS(right 4)
  t.3 = Add(t.3 t.2)
  t.4 = [t.3+4]
  v = t.4
  t.5 = Sub(left 1)
  i = t.5
  j = right
  cont01 = 1
  while1_top:
  if0 cont01 goto :while1_end
  cont02 = 1
  while2_top:
  if0 cont02 goto :while2_end
  t.6 = Add(i 1)
  i = t.6
  t.7 = [this+4]
  if t.7 goto :null7
  Error("null pointer")
  null7:
  t.8 = [t.7]
  t.8 = LtS(i t.8)
  if t.8 goto :bounds2
  Error("array index out of bounds")
  bounds2:
  t.8 = MulS(i 4)
  t.8 = Add(t.8 t.7)
  t.9 = [t.8+4]
  aux03 = t.9
  t.10 = LtS(aux03 v)
  t.11 = Sub(1 t.10)
  if0 t.11 goto :if2_else
  cont02 = 0
  goto :if2_end
  if2_else:
  cont02 = 1
  if2_end:
  goto :while2_top
  while2_end:
  cont02 = 1
  while3_top:
  if0 cont02 goto :while3_end
  t.12 = Sub(j 1)
  j = t.12
  t.13 = [this+4]
  if t.13 goto :null8
  Error("null pointer")
  null8:
  t.14 = [t.13]
  t.14 = LtS(j t.14)
  if t.14 goto :bounds3
  Error("array index out of bounds")
  bounds3:
  t.14 = MulS(j 4)
  t.14 = Add(t.14 t.13)
  t.15 = [t.14+4]
  aux03 = t.15
  t.16 = LtS(v aux03)
  t.17 = Sub(1 t.16)
  if0 t.17 goto :if3_else
  cont02 = 0
  goto :if3_end
  if3_else:
  cont02 = 1
  if3_end:
  goto :while3_top
  while3_end:
  t.18 = [this+4]
  if t.18 goto :null9
  Error("null pointer")
  null9:
  t.19 = [t.18]
  t.19 = LtS(i t.19)
  if t.19 goto :bounds4
  Error("array index out of bounds")
  bounds4:
  t.19 = MulS(i 4)
  t.19 = Add(t.19 t.18)
  t.20 = [t.19+4]
  t = t.20
  t.21 = [this+4]
  if t.21 goto :null10
  Error("null pointer")
  null10:
  t.22 = [t.21]
  t.22 = Lt(i t.22)
  if t.22 goto :bounds5
  Error("array index out of bounds")
  bounds5:
  t.22 = MulS(i 4)
  t.22 = Add(t.22 t.21)
  t.23 = [this+4]
  if t.23 goto :null11
  Error("null pointer")
  null11:
  t.24 = [t.23]
  t.24 = LtS(j t.24)
  if t.24 goto :bounds6
  Error("array index out of bounds")
  bounds6:
  t.24 = MulS(j 4)
  t.24 = Add(t.24 t.23)
  t.25 = [t.24+4]
  [t.22+4] = t.25
  t.26 = [this+4]
  if t.26 goto :null12
  Error("null pointer")
  null12:
  t.27 = [t.26]
  t.27 = Lt(j t.27)
  if t.27 goto :bounds7
  Error("array index out of bounds")
  bounds7:
  t.27 = MulS(j 4)
  t.27 = Add(t.27 t.26)
  [t.27+4] = t
  t.28 = Add(i 1)
  t.29 = LtS(j t.28)
  if0 t.29 goto :if4_else
  cont01 = 0
  goto :if4_end
  if4_else:
  cont01 = 1
  if4_end:
  goto :while1_top
  while1_end:
  t.30 = [this+4]
  if t.30 goto :null13
  Error("null pointer")
  null13:
  t.31 = [t.30]
  t.31 = Lt(j t.31)
  if t.31 goto :bounds8
  Error("array index out of bounds")
  bounds8:
  t.31 = MulS(j 4)
  t.31 = Add(t.31 t.30)
  t.32 = [this+4]
  if t.32 goto :null14
  Error("null pointer")
  null14:
  t.33 = [t.32]
  t.33 = LtS(i t.33)
  if t.33 goto :bounds9
  Error("array index out of bounds")
  bounds9:
  t.33 = MulS(i 4)
  t.33 = Add(t.33 t.32)
  t.34 = [t.33+4]
  [t.31+4] = t.34
  t.35 = [this+4]
  if t.35 goto :null15
  Error("null pointer")
  null15:
  t.36 = [t.35]
  t.36 = Lt(i t.36)
  if t.36 goto :bounds10
  Error("array index out of bounds")
  bounds10:
  t.36 = MulS(i 4)
  t.36 = Add(t.36 t.35)
  t.37 = [this+4]
  if t.37 goto :null16
  Error("null pointer")
  null16:
  t.38 = [t.37]
  t.38 = LtS(right t.38)
  if t.38 goto :bounds11
  Error("array index out of bounds")
  bounds11:
  t.38 = MulS(right 4)
  t.38 = Add(t.38 t.37)
  t.39 = [t.38+4]
  [t.36+4] = t.39
  t.40 = [this+4]
  if t.40 goto :null17
  Error("null pointer")
  null17:
  t.41 = [t.40]
  t.41 = Lt(right t.41)
  if t.41 goto :bounds12
  Error("array index out of bounds")
  bounds12:
  t.41 = MulS(right 4)
  t.41 = Add(t.41 t.40)
  [t.41+4] = t
  if this goto :null18
  Error("null pointer")
  null18:
  t.42 = [this]
  t.42 = [t.42+4]
  t.44 = Sub(i 1)
  t.43 = call t.42(this left t.44)
  nt = t.43
  if this goto :null19
  Error("null pointer")
  null19:
  t.45 = [this]
  t.45 = [t.45+4]
  t.47 = Add(i 1)
  t.46 = call t.45(this t.47 right)
  nt = t.46
  goto :if1_end
  if1_else:
  nt = 0
  if1_end:
  ret 0

func QS_Print(this)
  j = 0
  while4_top:
  t.1 = [this+8]
  t.2 = LtS(j t.1)
  if0 t.2 goto :while4_end
  t.3 = [this+4]
  if t.3 goto :null20
  Error("null pointer")
  null20:
  t.4 = [t.3]
  t.4 = LtS(j t.4)
  if t.4 goto :bounds13
  Error("array index out of bounds")
  bounds13:
  t.4 = MulS(j 4)
  t.4 = Add(t.4 t.3)
  t.5 = [t.4+4]
  PrintIntS(t.5)
  t.6 = Add(j 1)
  j = t.6
  goto :while4_top
  while4_end:
  ret 0

func QS_Init(this sz)
  [this+8] = sz
  t.1 = call :AllocArray(sz)
  [this+4] = t.1
  t.2 = [this+4]
  if t.2 goto :null21
  Error("null pointer")
  null21:
  t.3 = [t.2]
  t.3 = Lt(0 t.3)
  if t.3 goto :bounds14
  Error("array index out of bounds")
  bounds14:
  t.3 = MulS(0 4)
  t.3 = Add(t.3 t.2)
  [t.3+4] = 20
  t.4 = [this+4]
  if t.4 goto :null22
  Error("null pointer")
  null22:
  t.5 = [t.4]
  t.5 = Lt(1 t.5)
  if t.5 goto :bounds15
  Error("array index out of bounds")
  bounds15:
  t.5 = MulS(1 4)
  t.5 = Add(t.5 t.4)
  [t.5+4] = 7
  t.6 = [this+4]
  if t.6 goto :null23
  Error("null pointer")
  null23:
  t.7 = [t.6]
  t.7 = Lt(2 t.7)
  if t.7 goto :bounds16
  Error("array index out of bounds")
  bounds16:
  t.7 = MulS(2 4)
  t.7 = Add(t.7 t.6)
  [t.7+4] = 12
  t.8 = [this+4]
  if t.8 goto :null24
  Error("null pointer")
  null24:
  t.9 = [t.8]
  t.9 = Lt(3 t.9)
  if t.9 goto :bounds17
  Error("array index out of bounds")
  bounds17:
  t.9 = MulS(3 4)
  t.9 = Add(t.9 t.8)
  [t.9+4] = 18
  t.10 = [this+4]
  if t.10 goto :null25
  Error("null pointer")
  null25:
  t.11 = [t.10]
  t.11 = Lt(4 t.11)
  if t.11 goto :bounds18
  Error("array index out of bounds")
  bounds18:
  t.11 = MulS(4 4)
  t.11 = Add(t.11 t.10)
  [t.11+4] = 2
  t.12 = [this+4]
  if t.12 goto :null26
  Error("null pointer")
  null26:
  t.13 = [t.12]
  t.13 = Lt(5 t.13)
  if t.13 goto :bounds19
  Error("array index out of bounds")
  bounds19:
  t.13 = MulS(5 4)
  t.13 = Add(t.13 t.12)
  [t.13+4] = 11
  t.14 = [this+4]
  if t.14 goto :null27
  Error("null pointer")
  null27:
  t.15 = [t.14]
  t.15 = Lt(6 t.15)
  if t.15 goto :bounds20
  Error("array index out of bounds")
  bounds20:
  t.15 = MulS(6 4)
  t.15 = Add(t.15 t.14)
  [t.15+4] = 6
  t.16 = [this+4]
  if t.16 goto :null28
  Error("null pointer")
  null28:
  t.17 = [t.16]
  t.17 = Lt(7 t.17)
  if t.17 goto :bounds21
  Error("array index out of bounds")
  bounds21:
  t.17 = MulS(7 4)
  t.17 = Add(t.17 t.16)
  [t.17+4] = 9
  t.18 = [this+4]
  if t.18 goto :null29
  Error("null pointer")
  null29:
  t.19 = [t.18]
  t.19 = Lt(8 t.19)
  if t.19 goto :bounds22
  Error("array index out of bounds")
  bounds22:
  t.19 = MulS(8 4)
  t.19 = Add(t.19 t.18)
  [t.19+4] = 19
  t.20 = [this+4]
  if t.20 goto :null30
  Error("null pointer")
  null30:
  t.21 = [t.20]
  t.21 = Lt(9 t.21)
  if t.21 goto :bounds23
  Error("array index out of bounds")
  bounds23:
  t.21 = MulS(9 4)
  t.21 = Add(t.21 t.20)
  [t.21+4] = 5
  ret 0

const functable_QS
  :QS_Start
  :QS_Sort
  :QS_Print
  :QS_Init

func AllocArray(size)
  bytes = MulS(size 4)
  bytes = Add(bytes 4)
  v = HeapAllocZ(bytes)
  [v] = size
  ret v

