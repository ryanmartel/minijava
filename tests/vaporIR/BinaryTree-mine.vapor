func Main()
  t.1 = HeapAllocZ(4)
  [t.1] = :functable_BT
  if t.1 goto :null1
  Error("null pointer")
  null1:
  t.2 = [t.1]
  t.2 = [t.2+0]
  t.3 = call t.2(t.1)
  PrintIntS(t.3)
  ret

func BT_Start(this)
  t.1 = HeapAllocZ(28)
  [t.1] = :functable_Tree
  if t.1 goto :null2
  Error("null pointer")
  null2:
  root = t.1
  if t.1 goto :null3
  Error("null pointer")
  null3:
  t.2 = [t.1]
  t.2 = [t.2+0]
  t.3 = call t.2(t.1 16)
  ntb = t.3
  if t.1 goto :null4
  Error("null pointer")
  null4:
  t.4 = [t.1]
  t.4 = [t.4+72]
  t.5 = call t.4(t.1)
  ntb = t.5
  PrintIntS(100000000)
  if t.1 goto :null5
  Error("null pointer")
  null5:
  t.6 = [t.1]
  t.6 = [t.6+48]
  t.7 = call t.6(t.1 8)
  ntb = t.7
  if t.1 goto :null6
  Error("null pointer")
  null6:
  t.8 = [t.1]
  t.8 = [t.8+72]
  t.9 = call t.8(t.1)
  ntb = t.9
  if t.1 goto :null7
  Error("null pointer")
  null7:
  t.10 = [t.1]
  t.10 = [t.10+48]
  t.11 = call t.10(t.1 24)
  ntb = t.11
  if t.1 goto :null8
  Error("null pointer")
  null8:
  t.12 = [t.1]
  t.12 = [t.12+48]
  t.13 = call t.12(t.1 4)
  ntb = t.13
  if t.1 goto :null9
  Error("null pointer")
  null9:
  t.14 = [t.1]
  t.14 = [t.14+48]
  t.15 = call t.14(t.1 12)
  ntb = t.15
  if t.1 goto :null10
  Error("null pointer")
  null10:
  t.16 = [t.1]
  t.16 = [t.16+48]
  t.17 = call t.16(t.1 20)
  ntb = t.17
  if t.1 goto :null11
  Error("null pointer")
  null11:
  t.18 = [t.1]
  t.18 = [t.18+48]
  t.19 = call t.18(t.1 28)
  ntb = t.19
  if t.1 goto :null12
  Error("null pointer")
  null12:
  t.20 = [t.1]
  t.20 = [t.20+48]
  t.21 = call t.20(t.1 14)
  ntb = t.21
  if t.1 goto :null13
  Error("null pointer")
  null13:
  t.22 = [t.1]
  t.22 = [t.22+72]
  t.23 = call t.22(t.1)
  ntb = t.23
  if t.1 goto :null14
  Error("null pointer")
  null14:
  t.24 = [t.1]
  t.24 = [t.24+68]
  t.25 = call t.24(t.1 24)
  PrintIntS(t.25)
  if t.1 goto :null15
  Error("null pointer")
  null15:
  t.26 = [t.1]
  t.26 = [t.26+68]
  t.27 = call t.26(t.1 12)
  PrintIntS(t.27)
  if t.1 goto :null16
  Error("null pointer")
  null16:
  t.28 = [t.1]
  t.28 = [t.28+68]
  t.29 = call t.28(t.1 16)
  PrintIntS(t.29)
  if t.1 goto :null17
  Error("null pointer")
  null17:
  t.30 = [t.1]
  t.30 = [t.30+68]
  t.31 = call t.30(t.1 50)
  PrintIntS(t.31)
  if t.1 goto :null18
  Error("null pointer")
  null18:
  t.32 = [t.1]
  t.32 = [t.32+68]
  t.33 = call t.32(t.1 12)
  PrintIntS(t.33)
  if t.1 goto :null19
  Error("null pointer")
  null19:
  t.34 = [t.1]
  t.34 = [t.34+52]
  t.35 = call t.34(t.1 12)
  ntb = t.35
  if t.1 goto :null20
  Error("null pointer")
  null20:
  t.36 = [t.1]
  t.36 = [t.36+72]
  t.37 = call t.36(t.1)
  ntb = t.37
  if t.1 goto :null21
  Error("null pointer")
  null21:
  t.38 = [t.1]
  t.38 = [t.38+68]
  t.39 = call t.38(t.1 12)
  PrintIntS(t.39)
  ret 0

const functable_BT
  :BT_Start

func Tree_Init(this v_key)
  [this+12] = v_key
  [this+16] = 0
  [this+20] = 0
  ret 1

func Tree_SetRight(this rn)
  [this+8] = rn
  ret 1

func Tree_SetLeft(this ln)
  [this+4] = ln
  ret 1

func Tree_GetRight(this)
  t.1 = [this+8]
  ret t.1

func Tree_GetLeft(this)
  t.1 = [this+4]
  ret t.1

func Tree_GetKey(this)
  t.1 = [this+12]
  ret t.1

func Tree_SetKey(this v_key)
  [this+12] = v_key
  ret 1

func Tree_GetHas_Right(this)
  t.1 = [this+20]
  ret t.1

func Tree_GetHas_Left(this)
  t.1 = [this+16]
  ret t.1

func Tree_SetHas_Left(this val)
  [this+16] = val
  ret 1

func Tree_SetHas_Right(this val)
  [this+20] = val
  ret 1

func Tree_Compare(this num1 num2)
  ntb = 0
  t.1 = Add(num2 1)
  nti = t.1
  t.2 = LtS(num1 num2)
  if0 t.2 goto :if1_else
  ntb = 0
  goto :if1_end
  if1_else:
  t.3 = LtS(num1 nti)
  t.4 = Sub(1 t.3)
  if0 t.4 goto :if2_else
  ntb = 0
  goto :if2_end
  if2_else:
  ntb = 1
  if2_end:
  if1_end:
  ret ntb

func Tree_Insert(this v_key)
  t.1 = HeapAllocZ(28)
  [t.1] = :functable_Tree
  if t.1 goto :null22
  Error("null pointer")
  null22:
  new_node = t.1
  if t.1 goto :null23
  Error("null pointer")
  null23:
  t.2 = [t.1]
  t.2 = [t.2+0]
  t.3 = call t.2(t.1 v_key)
  ntb = t.3
  current_node = this
  cont = 1
  while1_top:
  if0 cont goto :while1_end
  if current_node goto :null24
  Error("null pointer")
  null24:
  t.4 = [current_node]
  t.4 = [t.4+20]
  t.5 = call t.4(current_node)
  key_aux = t.5
  t.6 = LtS(v_key key_aux)
  if0 t.6 goto :if3_else
  if current_node goto :null25
  Error("null pointer")
  null25:
  t.7 = [current_node]
  t.7 = [t.7+32]
  t.8 = call t.7(current_node)
  if0 t.8 goto :if4_else
  if current_node goto :null26
  Error("null pointer")
  null26:
  t.9 = [current_node]
  t.9 = [t.9+16]
  t.10 = call t.9(current_node)
  current_node = t.10
  goto :if4_end
  if4_else:
  cont = 0
  if current_node goto :null27
  Error("null pointer")
  null27:
  t.11 = [current_node]
  t.11 = [t.11+36]
  t.12 = call t.11(current_node 1)
  ntb = t.12
  if current_node goto :null28
  Error("null pointer")
  null28:
  t.13 = [current_node]
  t.13 = [t.13+8]
  t.14 = call t.13(current_node t.1)
  ntb = t.14
  if4_end:
  goto :if3_end
  if3_else:
  if current_node goto :null29
  Error("null pointer")
  null29:
  t.15 = [current_node]
  t.15 = [t.15+28]
  t.16 = call t.15(current_node)
  if0 t.16 goto :if5_else
  if current_node goto :null30
  Error("null pointer")
  null30:
  t.17 = [current_node]
  t.17 = [t.17+12]
  t.18 = call t.17(current_node)
  current_node = t.18
  goto :if5_end
  if5_else:
  cont = 0
  if current_node goto :null31
  Error("null pointer")
  null31:
  t.19 = [current_node]
  t.19 = [t.19+40]
  t.20 = call t.19(current_node 1)
  ntb = t.20
  if current_node goto :null32
  Error("null pointer")
  null32:
  t.21 = [current_node]
  t.21 = [t.21+4]
  t.22 = call t.21(current_node t.1)
  ntb = t.22
  if5_end:
  if3_end:
  goto :while1_top
  while1_end:
  ret 1

func Tree_Delete(this v_key)
  current_node = this
  parent_node = this
  cont = 1
  found = 0
  is_root = 1
  while2_top:
  if0 cont goto :while2_end
  if current_node goto :null33
  Error("null pointer")
  null33:
  t.1 = [current_node]
  t.1 = [t.1+20]
  t.2 = call t.1(current_node)
  key_aux = t.2
  t.3 = LtS(v_key key_aux)
  if0 t.3 goto :if6_else
  if current_node goto :null34
  Error("null pointer")
  null34:
  t.4 = [current_node]
  t.4 = [t.4+32]
  t.5 = call t.4(current_node)
  if0 t.5 goto :if7_else
  parent_node = current_node
  if current_node goto :null35
  Error("null pointer")
  null35:
  t.6 = [current_node]
  t.6 = [t.6+16]
  t.7 = call t.6(current_node)
  current_node = t.7
  goto :if7_end
  if7_else:
  cont = 0
  if7_end:
  goto :if6_end
  if6_else:
  t.8 = LtS(key_aux v_key)
  if0 t.8 goto :if8_else
  if current_node goto :null36
  Error("null pointer")
  null36:
  t.9 = [current_node]
  t.9 = [t.9+28]
  t.10 = call t.9(current_node)
  if0 t.10 goto :if9_else
  parent_node = current_node
  if current_node goto :null37
  Error("null pointer")
  null37:
  t.11 = [current_node]
  t.11 = [t.11+12]
  t.12 = call t.11(current_node)
  current_node = t.12
  goto :if9_end
  if9_else:
  cont = 0
  if9_end:
  goto :if8_end
  if8_else:
  if0 is_root goto :if10_else
  if current_node goto :null38
  Error("null pointer")
  null38:
  t.13 = [current_node]
  t.13 = [t.13+28]
  t.14 = call t.13(current_node)
  t.15 = Sub(1 t.14)
  if0 t.15 goto :ss1_else
  if current_node goto :null39
  Error("null pointer")
  null39:
  t.16 = [current_node]
  t.16 = [t.16+32]
  t.17 = call t.16(current_node)
  t.18 = Sub(1 t.17)
  goto :ss1_end
  ss1_else:
  t.18 = 0
  ss1_end:
  if0 t.18 goto :if11_else
  ntb = 1
  goto :if11_end
  if11_else:
  if this goto :null40
  Error("null pointer")
  null40:
  t.19 = [this]
  t.19 = [t.19+56]
  t.20 = call t.19(this parent_node current_node)
  ntb = t.20
  if11_end:
  goto :if10_end
  if10_else:
  if this goto :null41
  Error("null pointer")
  null41:
  t.21 = [this]
  t.21 = [t.21+56]
  t.22 = call t.21(this parent_node current_node)
  ntb = t.22
  if10_end:
  found = 1
  cont = 0
  if8_end:
  if6_end:
  is_root = 0
  goto :while2_top
  while2_end:
  ret found

func Tree_Remove(this p_node c_node)
  if c_node goto :null42
  Error("null pointer")
  null42:
  t.1 = [c_node]
  t.1 = [t.1+32]
  t.2 = call t.1(c_node)
  if0 t.2 goto :if12_else
  if this goto :null43
  Error("null pointer")
  null43:
  t.3 = [this]
  t.3 = [t.3+64]
  t.4 = call t.3(this p_node c_node)
  ntb = t.4
  goto :if12_end
  if12_else:
  if c_node goto :null44
  Error("null pointer")
  null44:
  t.5 = [c_node]
  t.5 = [t.5+28]
  t.6 = call t.5(c_node)
  if0 t.6 goto :if13_else
  if this goto :null45
  Error("null pointer")
  null45:
  t.7 = [this]
  t.7 = [t.7+60]
  t.8 = call t.7(this p_node c_node)
  ntb = t.8
  goto :if13_end
  if13_else:
  if c_node goto :null46
  Error("null pointer")
  null46:
  t.9 = [c_node]
  t.9 = [t.9+20]
  t.10 = call t.9(c_node)
  auxkey1 = t.10
  if p_node goto :null47
  Error("null pointer")
  null47:
  t.11 = [p_node]
  t.11 = [t.11+16]
  t.12 = call t.11(p_node)
  if t.12 goto :null48
  Error("null pointer")
  null48:
  t.13 = [t.12]
  t.13 = [t.13+20]
  t.14 = call t.13(t.12)
  auxkey2 = t.14
  if this goto :null49
  Error("null pointer")
  null49:
  t.15 = [this]
  t.15 = [t.15+44]
  t.16 = call t.15(this auxkey1 auxkey2)
  if0 t.16 goto :if14_else
  if p_node goto :null50
  Error("null pointer")
  null50:
  t.17 = [p_node]
  t.17 = [t.17+8]
  t.19 = [this+24]
  t.18 = call t.17(p_node t.19)
  ntb = t.18
  if p_node goto :null51
  Error("null pointer")
  null51:
  t.20 = [p_node]
  t.20 = [t.20+36]
  t.21 = call t.20(p_node 0)
  ntb = t.21
  goto :if14_end
  if14_else:
  if p_node goto :null52
  Error("null pointer")
  null52:
  t.22 = [p_node]
  t.22 = [t.22+4]
  t.24 = [this+24]
  t.23 = call t.22(p_node t.24)
  ntb = t.23
  if p_node goto :null53
  Error("null pointer")
  null53:
  t.25 = [p_node]
  t.25 = [t.25+40]
  t.26 = call t.25(p_node 0)
  ntb = t.26
  if14_end:
  if13_end:
  if12_end:
  ret 1

func Tree_RemoveRight(this p_node c_node)
  while3_top:
  if c_node goto :null54
  Error("null pointer")
  null54:
  t.1 = [c_node]
  t.1 = [t.1+28]
  t.2 = call t.1(c_node)
  if0 t.2 goto :while3_end
  if c_node goto :null55
  Error("null pointer")
  null55:
  t.3 = [c_node]
  t.3 = [t.3+24]
  if c_node goto :null56
  Error("null pointer")
  null56:
  t.5 = [c_node]
  t.5 = [t.5+12]
  t.6 = call t.5(c_node)
  if t.6 goto :null57
  Error("null pointer")
  null57:
  t.7 = [t.6]
  t.7 = [t.7+20]
  t.8 = call t.7(t.6)
  t.4 = call t.3(c_node t.8)
  ntb = t.4
  p_node = c_node
  if c_node goto :null58
  Error("null pointer")
  null58:
  t.9 = [c_node]
  t.9 = [t.9+12]
  t.10 = call t.9(c_node)
  c_node = t.10
  goto :while3_top
  while3_end:
  if p_node goto :null59
  Error("null pointer")
  null59:
  t.11 = [p_node]
  t.11 = [t.11+4]
  t.13 = [this+24]
  t.12 = call t.11(p_node t.13)
  ntb = t.12
  if p_node goto :null60
  Error("null pointer")
  null60:
  t.14 = [p_node]
  t.14 = [t.14+40]
  t.15 = call t.14(p_node 0)
  ntb = t.15
  ret 1

func Tree_RemoveLeft(this p_node c_node)
  while4_top:
  if c_node goto :null61
  Error("null pointer")
  null61:
  t.1 = [c_node]
  t.1 = [t.1+32]
  t.2 = call t.1(c_node)
  if0 t.2 goto :while4_end
  if c_node goto :null62
  Error("null pointer")
  null62:
  t.3 = [c_node]
  t.3 = [t.3+24]
  if c_node goto :null63
  Error("null pointer")
  null63:
  t.5 = [c_node]
  t.5 = [t.5+16]
  t.6 = call t.5(c_node)
  if t.6 goto :null64
  Error("null pointer")
  null64:
  t.7 = [t.6]
  t.7 = [t.7+20]
  t.8 = call t.7(t.6)
  t.4 = call t.3(c_node t.8)
  ntb = t.4
  p_node = c_node
  if c_node goto :null65
  Error("null pointer")
  null65:
  t.9 = [c_node]
  t.9 = [t.9+16]
  t.10 = call t.9(c_node)
  c_node = t.10
  goto :while4_top
  while4_end:
  if p_node goto :null66
  Error("null pointer")
  null66:
  t.11 = [p_node]
  t.11 = [t.11+8]
  t.13 = [this+24]
  t.12 = call t.11(p_node t.13)
  ntb = t.12
  if p_node goto :null67
  Error("null pointer")
  null67:
  t.14 = [p_node]
  t.14 = [t.14+36]
  t.15 = call t.14(p_node 0)
  ntb = t.15
  ret 1

func Tree_Search(this v_key)
  current_node = this
  cont = 1
  ifound = 0
  while5_top:
  if0 cont goto :while5_end
  if current_node goto :null68
  Error("null pointer")
  null68:
  t.1 = [current_node]
  t.1 = [t.1+20]
  t.2 = call t.1(current_node)
  key_aux = t.2
  t.3 = LtS(v_key key_aux)
  if0 t.3 goto :if15_else
  if current_node goto :null69
  Error("null pointer")
  null69:
  t.4 = [current_node]
  t.4 = [t.4+32]
  t.5 = call t.4(current_node)
  if0 t.5 goto :if16_else
  if current_node goto :null70
  Error("null pointer")
  null70:
  t.6 = [current_node]
  t.6 = [t.6+16]
  t.7 = call t.6(current_node)
  current_node = t.7
  goto :if16_end
  if16_else:
  cont = 0
  if16_end:
  goto :if15_end
  if15_else:
  t.8 = LtS(key_aux v_key)
  if0 t.8 goto :if17_else
  if current_node goto :null71
  Error("null pointer")
  null71:
  t.9 = [current_node]
  t.9 = [t.9+28]
  t.10 = call t.9(current_node)
  if0 t.10 goto :if18_else
  if current_node goto :null72
  Error("null pointer")
  null72:
  t.11 = [current_node]
  t.11 = [t.11+12]
  t.12 = call t.11(current_node)
  current_node = t.12
  goto :if18_end
  if18_else:
  cont = 0
  if18_end:
  goto :if17_end
  if17_else:
  ifound = 1
  cont = 0
  if17_end:
  if15_end:
  goto :while5_top
  while5_end:
  ret ifound

func Tree_Print(this)
  current_node = this
  if this goto :null73
  Error("null pointer")
  null73:
  t.1 = [this]
  t.1 = [t.1+76]
  t.2 = call t.1(this current_node)
  ntb = t.2
  ret 1

func Tree_RecPrint(this node)
  if node goto :null74
  Error("null pointer")
  null74:
  t.1 = [node]
  t.1 = [t.1+32]
  t.2 = call t.1(node)
  if0 t.2 goto :if19_else
  if this goto :null75
  Error("null pointer")
  null75:
  t.3 = [this]
  t.3 = [t.3+76]
  if node goto :null76
  Error("null pointer")
  null76:
  t.5 = [node]
  t.5 = [t.5+16]
  t.6 = call t.5(node)
  t.4 = call t.3(this t.6)
  ntb = t.4
  goto :if19_end
  if19_else:
  ntb = 1
  if19_end:
  if node goto :null77
  Error("null pointer")
  null77:
  t.7 = [node]
  t.7 = [t.7+20]
  t.8 = call t.7(node)
  PrintIntS(t.8)
  if node goto :null78
  Error("null pointer")
  null78:
  t.9 = [node]
  t.9 = [t.9+28]
  t.10 = call t.9(node)
  if0 t.10 goto :if20_else
  if this goto :null79
  Error("null pointer")
  null79:
  t.11 = [this]
  t.11 = [t.11+76]
  if node goto :null80
  Error("null pointer")
  null80:
  t.13 = [node]
  t.13 = [t.13+12]
  t.14 = call t.13(node)
  t.12 = call t.11(this t.14)
  ntb = t.12
  goto :if20_end
  if20_else:
  ntb = 1
  if20_end:
  ret 1

const functable_Tree
  :Tree_Init
  :Tree_SetRight
  :Tree_SetLeft
  :Tree_GetRight
  :Tree_GetLeft
  :Tree_GetKey
  :Tree_SetKey
  :Tree_GetHas_Right
  :Tree_GetHas_Left
  :Tree_SetHas_Left
  :Tree_SetHas_Right
  :Tree_Compare
  :Tree_Insert
  :Tree_Delete
  :Tree_Remove
  :Tree_RemoveRight
  :Tree_RemoveLeft
  :Tree_Search
  :Tree_Print
  :Tree_RecPrint

